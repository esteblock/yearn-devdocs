"use strict";(self.webpackChunkyearn_devdocs=self.webpackChunkyearn_devdocs||[]).push([[5847],{3905:(e,t,n)=>{n.d(t,{kt:()=>p});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=a.createContext({}),c=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},s=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,s=r(e,["components","mdxType","originalType","parentName"]),p=c(n),m=i,k=p["".concat(u,".").concat(m)]||p[m]||d[m]||o;return n?a.createElement(k,l(l({ref:t},s),{},{components:n})):a.createElement(k,l({ref:t},s))}));function p(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,l=new Array(o);l[0]=s;var r={};for(var u in t)hasOwnProperty.call(t,u)&&(r[u]=t[u]);r.originalType=e,r.mdxType="string"==typeof e?e:i,l[1]=r;for(var c=2;c<o;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},9417:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>s,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var a=n(7462),i=(n(7294),n(3905));const o={},l="Auctions",r={unversionedId:"auctions",id:"auctions",title:"Auctions",description:"Introduction",source:"@site/docs/resources/auctions.md",sourceDirName:".",slug:"/auctions",permalink:"/resources/auctions",draft:!1,tags:[],version:"current",lastUpdatedAt:1712723456,formattedLastUpdatedAt:"4/10/2024",frontMatter:{},sidebar:"mySidebar",previous:{title:"Links",permalink:"/resources/links"},next:{title:"Protocol Risks",permalink:"/resources/risks/protocol-risks"}},u={},c=[{value:"Introduction",id:"introduction",level:2},{value:"How it works",id:"how-it-works",level:3},{value:"Addresses",id:"addresses",level:3},{value:"Specification",id:"specification",level:2},{value:"Events",id:"events",level:3},{value:"AuctionEnabled",id:"auctionenabled",level:4},{value:"AuctionDisabled",id:"auctiondisabled",level:4},{value:"AuctionKicked",id:"auctionkicked",level:4},{value:"AuctionTaken",id:"auctiontaken",level:4},{value:"View methods",id:"view-methods",level:3},{value:"auctionLength",id:"auctionlength",level:4},{value:"auctionCooldown",id:"auctioncooldown",level:4},{value:"auctionInfo",id:"auctioninfo",level:4},{value:"getAmountNeeded",id:"getamountneeded",level:4},{value:"price",id:"price",level:4},{value:"kickable",id:"kickable",level:4},{value:"Write methods",id:"write-methods",level:3},{value:"kick",id:"kick",level:4},{value:"take",id:"take",level:4}],d={toc:c};function s(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"auctions"},"Auctions"),(0,i.kt)("h2",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,"Yearn regularly holds permissionless Dutch auctions, most notably for V3 strategies and YFI buybacks. This process has been standardized to encourage integration by searchers."),(0,i.kt)("h3",{id:"how-it-works"},"How it works"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Each ",(0,i.kt)("inlineCode",{parentName:"li"},"want")," token has a dedicated auction contract. Many different ",(0,i.kt)("inlineCode",{parentName:"li"},"sell"),' tokens can be offered through distinct auctions through this contract, receiving the same asset in return. In other words, "Sell DAI for YFI" and "Sell WETH for YFI" can both supported through the same contract with WETH as the asset, but any one auction will only sell either DAI or WETH, never both.'),(0,i.kt)("li",{parentName:"ul"},"Tokens for sale accumulate either in their respective auction contracts directly, or in the contracts that rely on the auctions (and get transferred to the auction contract at the start of the auction)."),(0,i.kt)("li",{parentName:"ul"},"An auction can be initiated either once a sufficient ",(0,i.kt)("inlineCode",{parentName:"li"},"sell")," amount accumulates, or upon a manual ",(0,i.kt)("inlineCode",{parentName:"li"},"kick()")," call that is permissionless.\nAuctions can last up to 24 hours and occur no more than once within some configurable interval, like weekly."),(0,i.kt)("li",{parentName:"ul"},"The initial price is set high and decreases with time, halving every hour."),(0,i.kt)("li",{parentName:"ul"},"Takers can ",(0,i.kt)("inlineCode",{parentName:"li"},"take()")," the sell token on offer at the current price, providing asset to the contract in return."),(0,i.kt)("li",{parentName:"ul"},"The auction concludes once all sell in the batch is sold or 24 hours elapse."),(0,i.kt)("li",{parentName:"ul"},"Unsold sell carries over to the subsequent auction.")),(0,i.kt)("h3",{id:"addresses"},"Addresses"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Name"),(0,i.kt)("th",{parentName:"tr",align:null},"Address"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Auction factory"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://etherscan.io/address/0xE6aB098E8582178A76DC80d55ca304d1Dec11AD8"},(0,i.kt)("inlineCode",{parentName:"a"},"0xE6aB098E8582178A76DC80d55ca304d1Dec11AD8")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"YFI buyback auctions"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://etherscan.io/address/0x4349ed200029e6Cf38F1455B9dA88981F1806df3"},(0,i.kt)("inlineCode",{parentName:"a"},"0x4349ed200029e6Cf38F1455B9dA88981F1806df3")))))),(0,i.kt)("h2",{id:"specification"},"Specification"),(0,i.kt)("h3",{id:"events"},"Events"),(0,i.kt)("h4",{id:"auctionenabled"},"AuctionEnabled"),(0,i.kt)("p",null,"Emitted when an auction is enabled to tell parties to track it."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"}," - name: AuctionEnabled\n   type: event\n   \n   inputs:\n    - name: auctionId\n      indexed: false\n      type: bytes32\n      \n    - name: sell\n      indexed: true\n      type: address\n      \n    - name: want\n      indexed: true\n      type: address\n      \n    - name: auctionAddress\n      indexed: true\n      type: address\n")),(0,i.kt)("h4",{id:"auctiondisabled"},"AuctionDisabled"),(0,i.kt)("p",null,"Emitted when an Auction is disabled so it no longer needs to be tracked."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"}," - name: AuctionDisabled\n   type: event\n   \n   inputs:\n    - name: auctionId\n      indexed: false\n      type: bytes32\n      \n    - name: sell\n      indexed: true\n      type: address\n      \n    - name: want\n      indexed: true\n      type: address\n      \n    - name: auctionAddress\n      indexed: true\n      type: address\n")),(0,i.kt)("h4",{id:"auctionkicked"},"AuctionKicked"),(0,i.kt)("p",null,"Emitted when a new auction is kicked off."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"}," - name: AuctionKicked\n   type: event\n   \n   inputs:\n    - name: auctionId\n      indexed: true\n      type: bytes32\n      \n    - name: sellAvailable\n      indexed: false\n      type: uint256\n")),(0,i.kt)("h4",{id:"auctiontaken"},"AuctionTaken"),(0,i.kt)("p",null,"Emitted when some amount of sell is taken."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"}," - name: AuctionTaken\n   type: event\n   \n   inputs:\n    - name: auctionId\n      indexed: true\n      type: bytes32\n      \n    - name: amountTaken\n      indexed: false\n      type: uint256\n      \n    - name: amountLeft\n      indexed: false\n      type: uint256\n")),(0,i.kt)("h3",{id:"view-methods"},"View methods"),(0,i.kt)("h4",{id:"auctionlength"},"auctionLength"),(0,i.kt)("p",null,"Get the time length of each auction."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"}," - name: auctionLength\n   type: function\n   stateMutability: view\n   \n   inputs: []\n   \n   outputs:\n    - name: auctionLengthTime\n      type: uint256\n")),(0,i.kt)("h4",{id:"auctioncooldown"},"auctionCooldown"),(0,i.kt)("p",null,"Get the minimum time inbetween auction kicks."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"}," - name: auctionCooldown\n   type: function\n   stateMutability: view\n   \n   inputs: []\n   \n   outputs:\n    - name: auctionCooldownTime\n      type: uint256\n")),(0,i.kt)("h4",{id:"auctioninfo"},"auctionInfo"),(0,i.kt)("p",null,"Get all of the info for a specific auction."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"}," - name: auctionInfo\n   type: function\n   stateMutability: view\n   \n   inputs:\n     - name: auctionId\n       type: bytes32\n       \n    outputs:\n     - name: sell\n       type: address\n       \n     - name: want\n       type: address\n       \n     - name: kicked\n       type: uint256\n       \n     - name: available\n       type: uint256\n")),(0,i.kt)("h4",{id:"getamountneeded"},"getAmountNeeded"),(0,i.kt)("p",null,"Get the exact amount of ",(0,i.kt)("inlineCode",{parentName:"p"},"want")," needed to buy ",(0,i.kt)("inlineCode",{parentName:"p"},"sell"),". "),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Will return ",(0,i.kt)("inlineCode",{parentName:"li"},"0")," if nothing to take.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"- name: getAmountNeeded\n  type: function\n  stateMutability: view\n\n  inputs: \n    - name: id\n      type: bytes32\n      \n    - name: amoutToTake\n      type: uint256\n      \n    - name: timestamp\n      type: uint256\n      default: block.timestamp\n      \n  outputs:\n    - name: currentPrice\n      type: uint256\n")),(0,i.kt)("h4",{id:"price"},"price"),(0,i.kt)("p",null,"Get the current price of ",(0,i.kt)("inlineCode",{parentName:"p"},"sell")," in terms of ",(0,i.kt)("inlineCode",{parentName:"p"},"want"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"- name: price\n  type: function\n  stateMutability: view\n\n  inputs: \n    - name: id\n      type: bytes32\n      \n    - name: timestamp\n      type: uint256\n      default: block.timestamp\n      \n  outputs:\n    - name: currentPrice\n      type: uint256\n")),(0,i.kt)("h4",{id:"kickable"},"kickable"),(0,i.kt)("p",null,"Get the expected amount of ",(0,i.kt)("inlineCode",{parentName:"p"},"sell")," that would be available if auction was kicked."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Inclusive of anything left over unsold from the last auction"),(0,i.kt)("li",{parentName:"ul"},"May not be entirely accurate of the effect of an actual kick.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"- name: kickable\n  type: function\n  stateMutability: view\n\n  inputs: \n    - name: id\n      type: bytes32\n      \n  outputs:\n    - name: expectedAvailable\n      type: uint256\n")),(0,i.kt)("h3",{id:"write-methods"},"Write methods"),(0,i.kt)("h4",{id:"kick"},"kick"),(0,i.kt)("p",null,"Kicks an auction."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"}," - name: kick\n   type: function\n   stateMutability: nonpayable\n   \n   inputs:\n    - name: auctionId\n      type: bytes32\n      \n    outputs:\n     - name: amountAvailable\n       type: uint256\n")),(0,i.kt)("h4",{id:"take"},"take"),(0,i.kt)("p",null,"Take some amount of ",(0,i.kt)("inlineCode",{parentName:"p"},"sell")," for ",(0,i.kt)("inlineCode",{parentName:"p"},"want")," at the current price."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"}," - name: take\n   type: function\n   stateMutability: nonpayable\n   \n   inputs:\n    - name: auctionId\n      type: bytes32\n      \n    - name: maxAmount\n      type: uint256\n      default: 2 ** 256 - 1\n      \n    - name: receiver\n      type: address\n      default: msg.sender\n      \n    - name: data\n      type: bytes\n      default: empty\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"NOTE:")),(0,i.kt)("p",null,"If the optional 'data' parameter is supplied the auction will do a callback to the receiver address after sending the ",(0,i.kt)("inlineCode",{parentName:"p"},"sell")," but before pulling the ",(0,i.kt)("inlineCode",{parentName:"p"},"want"),"."),(0,i.kt)("p",null,"The receiver will need to implement following function to receive the callback:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"}," - name: auctionTakeCallback \n   type: function\n   stateMutability: nonpayable\n   \n   inputs:\n    - name: auctionId\n      type: bytes32\n      \n    - name: sender\n      type: address\n      \n    - name: amountTaken\n      type: uint256\n      \n    - name: amountNeeded\n      type: uint256\n      \n    - name: data\n      type: bytes\n      default: empty\n")))}s.isMDXComponent=!0}}]);