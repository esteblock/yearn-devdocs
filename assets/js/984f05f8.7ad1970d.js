"use strict";(self.webpackChunkyearn_devdocs=self.webpackChunkyearn_devdocs||[]).push([[445],{5877:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var r=t(4848),s=t(8453);const o={},a="Operations procedures",i={id:"process-and-procedures/operations",title:"Operations procedures",description:"These operations might be needed at any point in time.",source:"@site/versioned_docs/version-0.4.2/process-and-procedures/operations.md",sourceDirName:"process-and-procedures",slug:"/process-and-procedures/operations",permalink:"/vaults/0.4.2/process-and-procedures/operations",draft:!1,unlisted:!1,editUrl:"https://github.com/yearn/yearn-devdocs/edit/master/website/versioned_docs/version-0.4.2/process-and-procedures/operations.md",tags:[],version:"0.4.2",frontMatter:{},sidebar:"mySidebar",previous:{title:"Deploying a Vault and Strategy V2",permalink:"/vaults/0.4.2/process-and-procedures/deployment"},next:{title:"Emergency Procedures for Yearn Finance",permalink:"/vaults/0.4.2/process-and-procedures/emergency"}},c={},d=[{value:"Revoking a strategy with normal migration",id:"revoking-a-strategy-with-normal-migration",level:2},{value:"From the vault",id:"from-the-vault",level:3},{value:"From the strategy",id:"from-the-strategy",level:3},{value:"Emergency Procedures",id:"emergency-procedures",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"operations-procedures",children:"Operations procedures"}),"\n",(0,r.jsx)(n.p,{children:"These operations might be needed at any point in time."}),"\n",(0,r.jsx)(n.h2,{id:"revoking-a-strategy-with-normal-migration",children:"Revoking a strategy with normal migration"}),"\n",(0,r.jsx)(n.p,{children:"Let's say we found a problem in one of the strategies and we want to return all funds. There are two ways of doing it."}),"\n",(0,r.jsx)(n.p,{children:"The scripts below use the HEGIC vault as an example."}),"\n",(0,r.jsx)(n.h3,{id:"from-the-vault",children:"From the vault"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# Grab the gov account\ngov = accounts.at(vault.governance(), force=True)\n\n# The cream strategy is the first in the withdrawal queue\ns1 = Contract(vault.withdrawalQueue(0))\n\n# Revoke msg should be sent from gov or guardian\nvault.revokeStrategy(s1, {"from": gov})\n'})}),"\n",(0,r.jsx)(n.p,{children:"After running the command you will notice:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"vault.strategies(s1).dict()['debtRatio'] == 0\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Last step is running a ",(0,r.jsx)(n.code,{children:"harvest"})," to return funds to vault:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'s1.harvest({"from": gov})\n>>> hegic.balanceOf(s1)\n0\n>>> hegic.balanceOf(vault)/1e18\n291731.2666932462\n'})}),"\n",(0,r.jsx)(n.h3,{id:"from-the-strategy",children:"From the strategy"}),"\n",(0,r.jsx)(n.p,{children:"From the strategy itself we can turn on emergency mode.\nTo do it we need to run:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"# Grab the strategist account\nstrategist = accounts.at(s1.strategist(), force=True)\n\n# Turn on the emergency exit\ns1.setEmergencyExit({'from': strategist})\n\n# Harvest to move funds to the vault\ns1.harvest({'from': strategist})\n"})}),"\n",(0,r.jsxs)(n.p,{children:["We should also see the strategy's ",(0,r.jsx)(n.code,{children:"debtRatio"})," going to ",(0,r.jsx)(n.code,{children:"0"})," and funds returning to the vault."]}),"\n",(0,r.jsx)(n.h2,{id:"emergency-procedures",children:"Emergency Procedures"}),"\n",(0,r.jsx)(n.p,{children:"We can also shutdown the vault to return assets as soon as possible. To do that we will need a guardian or governance account:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"# Sound the alarm\nvault.setEmergencyShutdown(true, {'from': gov})\n\n# Harvest all strategies\ns1.harvest({'from': gov})\ns2.harvest({'from': gov})\ns3.harvest({'from': gov})\n\n# Check all the tokens are back in the vault\n>>> hegic.balanceOf(vault) == vault.totalAssets()\nTrue\n"})}),"\n",(0,r.jsx)(n.p,{children:"You will notice that this procedure doesn't change the debt ratio:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:">>> vault.strategies(s1).dict()['debtRatio']\n1600\n"})}),"\n",(0,r.jsxs)(n.p,{children:["It drops the credit to ",(0,r.jsx)(n.code,{children:"0"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:">>> vault.creditAvailable(s1)\n0\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>i});var r=t(6540);const s={},o=r.createContext(s);function a(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);